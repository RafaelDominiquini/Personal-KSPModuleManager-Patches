// Makes all game converters be able to convert LFO to Water

@PART[*]:HAS[@MODULE[ModuleResourceConverter]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[Ore]],@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]]:NEEDS[ThunderAerospace]:FINAL
{
	+MODULE[ModuleResourceConverter]:HAS[@OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]],@OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]]
	{
		@ConverterName = Water
		@StartActionName = Start ISRU [H2O]
		@StopActionName = Stop ISRU [H2O]

		Efficiency = 0
		@Efficiency += #$OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]]/Ratio$
		@Efficiency += #$OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]]/Ratio$
		@Efficiency /= #$INPUT_RESOURCE:HAS[#ResourceName[Ore]]/Ratio$
		
		InputEfficiency = #$Efficiency$
		@InputEfficiency += 0.25
		
		OutputEfficiency = #$Efficiency$
		@OutputEfficiency += 1.25

		-INPUT_RESOURCE:HAS[#ResourceName[Ore]] {}
		-INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] {}

		INPUT_RESOURCE
		{
			ResourceName = LiquidFuel
			Ratio = 0.02025
			@Ratio /= #$../InputEfficiency$					// 0.045 | 0.009
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = Oxidizer
			Ratio = 0.02475
			@Ratio /= #$../InputEfficiency$					// 0.055 | 0.011
			FlowMode = STAGE_PRIORITY_FLOW
		}

		-OUTPUT_RESOURCE:HAS[#ResourceName[LiquidFuel]] {}
		-OUTPUT_RESOURCE:HAS[#ResourceName[Oxidizer]] {}

		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.00021375
			@Ratio *= #$../OutputEfficiency$				// 0.0003099375 | 0.0006946875
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 18
			@Ratio *= #$../OutputEfficiency$				// 26.1 | 58.5
			DumpExcess = true
		}
	}
}
